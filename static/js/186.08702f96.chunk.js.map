{"version":3,"file":"static/js/186.08702f96.chunk.js","mappings":"+KAkCA,UA9BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,EAAS,WAAWO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5CJ,EAAeI,QAEhB,CAACR,IACJS,QAAQC,IAAIP,IAEV,8BACGA,EAAYQ,OAAS,GACpB,+BACE,wBACGR,EAAYS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,WAQf,6C,mKC1BOG,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,IAAAA,IAAA,oGAF3B,uBAEYC,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIT,QAAQC,IAAR,MAPJ,yFAWeS,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBP,IAAAA,IAXzB,6CAW+CI,GAX/C,uBAWUH,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeZ,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCN,GAAjC,8FAA0CyB,EAA1C,+BAAiD,GAAjD,kBAE2BR,IAAAA,IAAA,6CACiBjB,GADjB,OAEnByB,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYP,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIT,QAAQC,IAAR,MATJ","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReviews, setFilmReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId, 'reviews').then(({ results }) => {\n      setFilmReviews(results);\n    });\n  }, [movieId]);\n  console.log(filmReviews);\n  return (\n    <>\n      {filmReviews.length > 0 ? (\n        <>\n          <ul>\n            {filmReviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>No review! :(</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\n"],"names":["movieId","useParams","useState","filmReviews","setFilmReviews","useEffect","fetchMovieDetails","then","results","console","log","length","map","id","author","content","fetchTrandingMovies","axios","data","fetchMovie","query","params","api_key","language","page","type"],"sourceRoot":""}