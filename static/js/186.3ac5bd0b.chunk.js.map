{"version":3,"file":"static/js/186.3ac5bd0b.chunk.js","mappings":"+KAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,EAAS,WAAWO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5CC,QAAQC,IAAIF,GACZJ,EAAeI,QAEhB,CAACR,IACJS,QAAQC,IAAIV,GACZS,QAAQC,IAAIP,IAGV,gCACGA,IACC,+BACE,wBACGA,EAAYQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,UAQhBT,IAAe,8C,mKC5BPY,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,IAAAA,IAAA,oGAF3B,uBAEYC,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIR,QAAQC,IAAR,MAPJ,yFAWeQ,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBP,IAAAA,IAXzB,6CAW+CI,GAX/C,uBAWUH,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeX,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCN,GAAjC,8FAA0CwB,EAA1C,+BAAiD,GAAjD,kBAE2BR,IAAAA,IAAA,6CACiBhB,GADjB,OAEnBwB,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYP,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIR,QAAQC,IAAR,MATJ","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieDetails } from '../../services/api';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [filmReviews, setFilmReviews] = useState(null);\r\n  useEffect(() => {\r\n    fetchMovieDetails(movieId, 'reviews').then(({ results }) => {\r\n      console.log(results);\r\n      setFilmReviews(results);\r\n    });\r\n  }, [movieId]);\r\n  console.log(movieId);\r\n  console.log(filmReviews);\r\n\r\n  return (\r\n    <>\r\n      {filmReviews && (\r\n        <>\r\n          <ul>\r\n            {filmReviews.map(({ id, author, content }) => (\r\n              <li key={id}>\r\n                <p>{author}</p>\r\n                <p>{content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n      {filmReviews && <p>No review! :(</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nasync function fetchTrandingMovies() {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function fetchMovie(query) {\r\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\r\n  const params = {\r\n    params: {\r\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\r\n      language: `en-US`,\r\n      query: query,\r\n      page: 1,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.get(SEARCH_URL, params);\r\n  return data;\r\n}\r\n\r\nasync function fetchMovieDetails(movieId, type = '') {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}${\r\n        type ? '/' + type : ''\r\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\r\n"],"names":["movieId","useParams","useState","filmReviews","setFilmReviews","useEffect","fetchMovieDetails","then","results","console","log","map","id","author","content","fetchTrandingMovies","axios","data","fetchMovie","query","params","api_key","language","page","type"],"sourceRoot":""}