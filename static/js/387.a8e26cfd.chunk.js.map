{"version":3,"file":"static/js/387.a8e26cfd.chunk.js","mappings":"8MAEaA,E,QAAWC,EAAAA,GAAH,0N,SC+BrB,EA5Ba,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAoBC,EAAAA,EAAAA,GAAqB,GAAIJ,EAAS,WAA/CK,GAAP,eAGA,OADAC,QAAQC,IAAI,qBAAsBL,IAEhC,8BACGG,IACC,+BACE,SAACP,EAAD,UACGO,EAAUG,KAAI,SAAAC,GAAK,OAClB,2BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,QAEb,uCAAeJ,EAAMK,cACrB,kCAAUL,EAAMI,UANTJ,EAAMM,e,sFCdhBX,EAAuB,SAACY,EAAchB,EAASiB,GAC1D,OAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBtB,EAASiB,GAAMM,MAAK,SAAAC,GACpClB,QAAQC,IAAIiB,GACSJ,EAAZ,YAATH,EAA8BO,EAAKC,KAAiBD,EAAKE,cAE1D,CAAC1B,EAASiB,IACN,CAACE,K,mKCVKQ,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,IAAAA,IAAA,oGAF3B,uBAEYJ,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIlB,QAAQC,IAAR,MAPJ,yFAWesB,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBN,IAAAA,IAXzB,6CAW+CG,GAX/C,uBAWUP,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeF,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCtB,GAAjC,8FAA0CiB,EAA1C,+BAAiD,GAAjD,kBAE2BW,IAAAA,IAAA,6CACiB5B,GADjB,OAEnBiB,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYO,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIlB,QAAQC,IAAR,MATJ","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","hooks/useFetchMovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: baseline;\n  list-style: none;\n`;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useFetchMovieDetails } from 'hooks/useFetchMovieDetails';\n\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [filmCasts] = useFetchMovieDetails([], movieId, 'credits');\n\n  console.log('location on Cast: ', location);\n  return (\n    <>\n      {filmCasts && (\n        <>\n          <CastList>\n            {filmCasts.map(actor => (\n              <li key={actor.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n                <p>character: {actor.character}</p>\n                <p>name: {actor.name}</p>\n              </li>\n            ))}\n          </CastList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = (initialValue, movieId, type) => {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId, type).then(data => {\n      console.log(data);\n      type === 'credits' ? setValue(data.cast) : setValue(data.results);\n    });\n  }, [movieId, type]);\n  return [value];\n};\n","import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\n"],"names":["CastList","styled","movieId","useParams","location","useLocation","useFetchMovieDetails","filmCasts","console","log","map","actor","src","profile_path","alt","name","character","id","initialValue","type","useState","value","setValue","useEffect","fetchMovieDetails","then","data","cast","results","fetchTrandingMovies","axios","fetchMovie","query","params","api_key","language","page"],"sourceRoot":""}