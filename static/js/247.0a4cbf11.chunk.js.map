{"version":3,"file":"static/js/247.0a4cbf11.chunk.js","mappings":"gLAoCA,UAhCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,EAAS,WAAWO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5CC,QAAQC,IAAIF,GACZJ,EAAaI,QAEd,CAACR,IACJS,QAAQC,IAAIV,IAEV,8BACGG,IACC,+BACE,wBACGA,EAAUQ,KAAI,SAAAC,GAAK,OAClB,2BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,QAEb,uCAAeJ,EAAMK,cACrB,kCAAUL,EAAMI,UANTJ,EAAMM,e,mKClBdC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,IAAAA,IAAA,oGAF3B,uBAEYC,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIZ,QAAQC,IAAR,MAPJ,yFAWeY,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBP,IAAAA,IAXzB,6CAW+CI,GAX/C,uBAWUH,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeef,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCN,GAAjC,8FAA0C4B,EAA1C,+BAAiD,GAAjD,kBAE2BR,IAAAA,IAAA,6CACiBpB,GADjB,OAEnB4B,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYP,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIZ,QAAQC,IAAR,MATJ","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmCasts, setFilmCasts] = useState(null);\n  useEffect(() => {\n    fetchMovieDetails(movieId, 'credits').then(({ cast }) => {\n      console.log(cast);\n      setFilmCasts(cast);\n    });\n  }, [movieId]);\n  console.log(movieId);\n  return (\n    <>\n      {filmCasts && (\n        <>\n          <ul>\n            {filmCasts.map(actor => (\n              <li key={actor.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n                <p>character: {actor.character}</p>\n                <p>name: {actor.name}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\n"],"names":["movieId","useParams","useState","filmCasts","setFilmCasts","useEffect","fetchMovieDetails","then","cast","console","log","map","actor","src","profile_path","alt","name","character","id","fetchTrandingMovies","axios","data","fetchMovie","query","params","api_key","language","page","type"],"sourceRoot":""}