{"version":3,"file":"static/js/186.dd77e1aa.chunk.js","mappings":"qKA2BA,UAxBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsBE,EAAAA,EAAAA,GAAqB,GAAIF,EAAS,WAAjDG,GAAP,eAEA,OACE,8BACGA,EAAYC,OAAS,GACpB,+BACE,wBACGD,EAAYE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,WAQf,6C,sFClBKJ,EAAuB,SAACO,EAAcT,EAASU,GAC1D,OAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBf,EAASU,GAAMM,MAAK,SAAAC,GACpCC,QAAQC,IAAIF,GACSJ,EAAZ,YAATH,EAA8BO,EAAKG,KAAiBH,EAAKI,cAE1D,CAACrB,EAASU,IACN,CAACE,K,mKCVKU,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,IAAAA,IAAA,oGAF3B,uBAEYN,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,yFAWeK,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBN,IAAAA,IAXzB,6CAW+CG,GAX/C,uBAWUT,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeF,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCf,GAAjC,8FAA0CU,EAA1C,+BAAiD,GAAjD,kBAE2Ba,IAAAA,IAAA,6CACiBvB,GADjB,OAEnBU,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYO,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIC,QAAQC,IAAR,MATJ","sources":["components/Reviews/Reviews.jsx","hooks/useFetchMovieDetails.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useFetchMovieDetails } from 'hooks/useFetchMovieDetails';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReviews] = useFetchMovieDetails([], movieId, 'reviews');\n\n  return (\n    <>\n      {filmReviews.length > 0 ? (\n        <>\n          <ul>\n            {filmReviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>No review! :(</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = (initialValue, movieId, type) => {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId, type).then(data => {\n      console.log(data);\n      type === 'credits' ? setValue(data.cast) : setValue(data.results);\n    });\n  }, [movieId, type]);\n  return [value];\n};\n","import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\n"],"names":["movieId","useParams","useFetchMovieDetails","filmReviews","length","map","id","author","content","initialValue","type","useState","value","setValue","useEffect","fetchMovieDetails","then","data","console","log","cast","results","fetchTrandingMovies","axios","fetchMovie","query","params","api_key","language","page"],"sourceRoot":""}