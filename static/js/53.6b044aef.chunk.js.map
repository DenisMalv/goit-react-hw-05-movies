{"version":3,"file":"static/js/53.6b044aef.chunk.js","mappings":"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","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.js","components/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovieCard.jsx","hooks/useBackLink.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const DetailFilmCardMain = styled.div`\n  display: flex;\n`;\n\nexport const FilmPoster = styled.img`\n  width: 300px;\n  border-radius: 4px;\n`;\n\nexport const FilmMainInfo = styled.tbody`\n  & tr {\n    vertical-align: baseline;\n  }\n`;\nexport const FilmInfoName = styled.td`\n  width: 20%;\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  display: inline-block;\n  background-color: #24e3f2;\n  padding: 10px;\n  border-radius: 5px;\n  color: #282828;\n  &:active {\n    background-color: #18a9b5;\n  }\n`;\nexport const MoreInformationFilmCard = styled.div`\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const MoreInformationButton = styled(NavLink)`\n  text-decoration: none;\n  display: inline-block;\n  background-color: #24e3f2;\n  padding: 10px;\n  border-radius: 5px;\n  color: #282828;\n  &:active {\n    background-color: #18a9b5;\n  }\n  &.active {\n    background-color: #18a9b5;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useBackLink } from 'hooks/useBackLink';\nimport { useFetchMovieCard } from 'hooks/useFetchMovieCard';\n\nimport {\n  DetailFilmCardMain,\n  FilmPoster,\n  FilmMainInfo,\n  FilmInfoName,\n  BackLink,\n  MoreInformationFilmCard,\n  MoreInformationButton,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movieCard] = useFetchMovieCard(null, movieId);\n  const [backLinkURL] = useBackLink(null, movieCard, location);\n\n  return (\n    <>\n      {movieCard && (\n        <>\n          <DetailFilmCardMain>\n            <FilmPoster\n              src={`https://image.tmdb.org/t/p/w500/${movieCard.poster_path}`}\n              alt={movieCard.title}\n            />\n            <div>\n              <table style={{ padding: 10 }}>\n                <FilmMainInfo>\n                  <tr>\n                    <FilmInfoName>Rating : </FilmInfoName>\n                    <td>{movieCard.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <FilmInfoName>Title : </FilmInfoName>\n                    <td>{movieCard.title}</td>\n                  </tr>\n                  <tr>\n                    <FilmInfoName>Genres:</FilmInfoName>\n                    <td>{movieCard.genres.map(e => e.name + ', ')}</td>\n                  </tr>\n                  <tr>\n                    <FilmInfoName>Overviev :</FilmInfoName>\n                    <td>{movieCard.overview}</td>\n                  </tr>\n                </FilmMainInfo>\n              </table>\n              <BackLink to={`${backLinkURL}`}>Go back</BackLink>\n            </div>\n          </DetailFilmCardMain>\n\n          <MoreInformationFilmCard>\n            <MoreInformationButton\n              to=\"cast\"\n              state={{ from: `/movies?query=${movieCard.title}` }}\n            >\n              Casts\n            </MoreInformationButton>\n            <MoreInformationButton\n              to=\"reviews\"\n              state={{ from: `/movies?query=${movieCard.title}` }}\n            >\n              Reviews\n            </MoreInformationButton>\n            <Outlet />\n          </MoreInformationFilmCard>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieDetails } from 'services/api';\n\nexport const useFetchMovieCard = (initialValue, movieId) => {\n  const [filmCard, setFilmCard] = useState(initialValue);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(data => {\n      setFilmCard(data);\n    });\n  }, [movieId]);\n  return [filmCard, setFilmCard];\n};\n","import { useEffect, useState } from 'react';\n\nimport { useLocation } from 'react-router-dom';\n\nexport const useBackLink = (initialValue, resp, initLocation) => {\n  const location = useLocation();\n  console.log(location);\n  const [backLinkURL, setBackLinkURL] = useState(initialValue);\n  useEffect(() => {\n    if (backLinkURL) {\n      return;\n    }\n    if (!resp) {\n      return;\n    }\n    setBackLinkURL(initLocation?.state?.from ?? `/movies?query=${resp.title}`);\n  }, [backLinkURL, resp, initLocation?.state?.from]);\n  return [backLinkURL, setBackLinkURL];\n};\n","import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };\n"],"names":["DetailFilmCardMain","styled","FilmPoster","FilmMainInfo","FilmInfoName","BackLink","Link","MoreInformationFilmCard","MoreInformationButton","NavLink","movieId","useParams","location","useLocation","initialValue","useState","filmCard","setFilmCard","useEffect","fetchMovieDetails","then","data","useFetchMovieCard","movieCard","resp","initLocation","console","log","backLinkURL","setBackLinkURL","state","from","title","useBackLink","src","poster_path","alt","style","padding","vote_average","genres","map","e","name","overview","to","fetchTrandingMovies","axios","fetchMovie","query","params","api_key","language","page","type"],"sourceRoot":""}